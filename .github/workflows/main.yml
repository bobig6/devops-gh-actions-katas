name: Main workflow
on: push
env:
    docker_username: ${{ github.actor }}
    docker_password: ${{ secrets.GITHUB_TOKEN }}
    GIT_COMMIT: ${{ github.sha }}
jobs:
    sonarcloud:
      name: SonarCloud
      runs-on: ubuntu-latest
      container: gradle:6.8.3-jdk11
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0  
        - name: Run the build script
          run: ci/build-app.sh
        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          env: 
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    snyk:
      runs-on: ubuntu-latest
      container: gradle:6.8.3-jdk11
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

  
        - name: Install Snyk CLI
          uses: snyk/actions/setup@master
  
        - name: Run Snyk test
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          run: snyk test --file=app/build.gradle --severity-threshold=medium
  
  
  
          
          
          
            
    Build:
        runs-on: ubuntu-latest
        container: gradle:6.8.3-jdk11
        needs: [sonarcloud, snyk]
        steps:
            - name: Clone down the repository
              uses: actions/checkout@v2
            - name: Run the tests
              run: ci/unit-test-app.sh
            - name: Run the build script
              run: ci/build-app.sh
            - name: Upload the build artifact
              uses: actions/upload-artifact@v4
              with:
                  name: code
                  path: .
    Linting:
        runs-on: ubuntu-latest
        needs: Build
        steps:
            - name: Download the code
              uses: actions/download-artifact@v4
              with:
                  name: code
                  path: .
            - name: Run the linting script
              uses: super-linter/super-linter/slim@v5
              with:
                    DEFAULT_BRANCH: main
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    Docker-image:
        runs-on: ubuntu-latest
        needs: Build
        permissions:
            packages: write
        steps:
            - name: Download the code
              uses: actions/download-artifact@v4
              with:
                  name: code
                  path: .
            - name: build docker image
              run: bash ci/build-docker.sh
            - name: push the docker image
              run: bash ci/push-docker.sh
        
        

    
            